name: Terraform Dev (LocalStack)

on:
  workflow_dispatch:

jobs:
  terraform-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Start LocalStack container
        run: |
          docker compose -f infra/terraform/env/dev/docker-compose.yml up -d

      - name: Wait for LocalStack
        run: |
          echo "Waiting for LocalStack services..."
          until curl -s http://localhost:4566/_localstack/health | jq -e '.services.s3 == "available"' > /dev/null; do
            echo "LocalStack not ready yet..."
            sleep 2
          done
          echo "LocalStack is ready!"

      - name: Terraform Init
        run: terraform -chdir=infra/terraform/env/dev init -input=false

      - name: Terraform Plan
        run: terraform -chdir=infra/terraform/env/dev plan -out=tfplan \
              -var="env=${{ vars.ENV }}" \
              -var="region=${{ vars.AWS_REGION_US_WEST_2 }}" \
              -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
              -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Apply
        run: terraform -chdir=infra/terraform/env/dev apply -auto-approve -input=false \
              -var="env=${{ vars.ENV }}" \
              -var="region=${{ vars.AWS_REGION_US_WEST_2 }}" \
              -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
              -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Destroy
        if: always()
        run: terraform -chdir=infra/terraform/env/dev destroy -auto-approve -input=false \
              -var="env=${{ vars.ENV }}" \
              -var="region=${{ vars.AWS_REGION_US_WEST_2 }}" \
              -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
              -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
